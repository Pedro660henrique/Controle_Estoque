package application;

import java.util.Scanner;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import model.dao.DaoFactory;
import model.entities.Usuario;
import model.entities.Entrada;
import model.entities.Saida;
import model.entities.Fornecedor;
import model.entities.Cliente;
import model.entities.Produto;
import model.dao.impl.LoginDaoJDBC;
import model.dao.impl.UsuarioDaoJDBC;
import model.dao.impl.EntradaDaoJDBC;
import model.dao.impl.SaidaDaoJDBC;
import model.dao.impl.FornecedorDaoJDBC;
import model.dao.impl.ClienteDaoJDBC;
import model.dao.impl.ProdutoDaoJDBC;

public class Program {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("Bem-vindo ao sistema!");
        System.out.println("1. Criar novo usuário");
        System.out.println("2. Fazer login");
        System.out.println("3. Cadastrar Produto");
        System.out.println("4. Cadastrar Fornecedor");
        System.out.println("5. Cadastrar Cliente");
        System.out.println("6. Registrar Entrada de Produto");
        System.out.println("7. Registrar Saída de Produto");

        System.out.print("Escolha uma opção (1-7): ");
        int opcao = sc.nextInt();

        sc.nextLine();

        if (opcao == 1) {
            System.out.println("Criando um novo usuário...");
            
            System.out.print("Digite seu nome: ");
            String nome = sc.nextLine();
            
            System.out.print("Digite sua data de nascimento (dd/MM/yyyy): ");
            String dataNascimentoStr = sc.nextLine();
            
            System.out.print("Digite sua senha: ");
            String senha = sc.nextLine();
            
            LocalDate dataNascimento = LocalDate.parse(dataNascimentoStr, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            
            Usuario novoUsuario = new Usuario(null, nome, dataNascimento, senha);
            UsuarioDaoJDBC usuarioDao = (UsuarioDaoJDBC) DaoFactory.createUsuarioDao();
            usuarioDao.insert(novoUsuario);
            
            System.out.println("Usuário criado com sucesso! Agora você pode fazer login.");
        } else if (opcao == 2) {
            System.out.print("Digite seu ID de usuário: ");
            Integer idUsuario = sc.nextInt();
            sc.nextLine();

            System.out.print("Digite sua senha: ");
            String senha = sc.nextLine();

            boolean autenticado = LoginDaoJDBC.autenticar(idUsuario, senha);

            if (autenticado) {
                System.out.println("Acesso permitido! Bem-vindo ao sistema.");
            } else {
                System.out.println("Acesso negado. Credenciais inválidas.");
            }
        } else if (opcao == 3) {
            System.out.print("Digite o nome do produto: ");
            String nomeProduto = sc.nextLine();
            
            System.out.print("Digite o preço do produto: ");
            double preco = sc.nextDouble();
            
            System.out.print("Digite a quantidade do produto: ");
            int quantidade = sc.nextInt();
            
            Produto novoProduto = new Produto(null, nomeProduto, marcaProduto, lote, preco, quantidade);
            ProdutoDaoJDBC produtoDao = (ProdutoDaoJDBC) DaoFactory.createProdutoDao();
            produtoDao.insert(novoProduto);
            
            System.out.println("Produto cadastrado com sucesso!");
        } else if (opcao == 4) {
            System.out.print("Digite o nome do fornecedor: ");
            String nomeFornecedor = sc.nextLine();
            
            System.out.print("Digite o CNPJ do fornecedor: ");
            String cnpj = sc.nextLine();
            
            Fornecedor novoFornecedor = new Fornecedor(null, nomeFornecedor, enderecoFornecedor, cidade, bairro, cep, uf, telefone, cnpj);
            FornecedorDaoJDBC fornecedorDao = (FornecedorDaoJDBC) DaoFactory.createFornecedorDao();
            fornecedorDao.insert(novoFornecedor);
            
            System.out.println("Fornecedor cadastrado com sucesso!");
        } else if (opcao == 5) {
            System.out.print("Digite o nome do cliente: ");
            String nomeCliente = sc.nextLine();
            
            System.out.print("Digite o CPF do cliente: ");
            String cpf = sc.nextLine();
            
            Cliente novoCliente = new Cliente(null, nomeCliente, telefone, enderecoCliente, cidade, bairro, cep, uf, cpf);
            ClienteDaoJDBC clienteDao = (ClienteDaoJDBC) DaoFactory.createClienteDao();
            clienteDao.insert(novoCliente);
            
            System.out.println("Cliente cadastrado com sucesso!");
        } else if (opcao == 6) {
            System.out.print("Digite o ID do produto: ");
            int idProduto = sc.nextInt();

            ProdutoDaoJDBC produtoDao = (ProdutoDaoJDBC) DaoFactory.createProdutoDao();
            Produto produto = produtoDao.findById(idProduto);
            if (produto == null) {
                System.out.println("Produto não encontrado.");
                return;
            }

            System.out.print("Digite o ID do fornecedor: ");
            int idFornecedor = sc.nextInt();
            
            FornecedorDaoJDBC fornecedorDao = (FornecedorDaoJDBC) DaoFactory.createFornecedorDao();
            Fornecedor fornecedor = fornecedorDao.findById(idFornecedor);
            if (fornecedor == null) {
                System.out.println("Fornecedor não encontrado.");
                return;
            }

            System.out.print("Digite o ID de usuário responsável pela entrada: ");
            int idUsuario = sc.nextInt();
            
            UsuarioDaoJDBC usuarioDao = (UsuarioDaoJDBC) DaoFactory.createUsuarioDao();
            Usuario usuario = usuarioDao.findById(idUsuario);
            if (usuario == null) {
                System.out.println("Usuário não encontrado.");
                return;
            }

            System.out.print("Digite a data de entrada (dd/MM/yyyy): ");
            sc.nextLine(); 
            String dataEntradaStr = sc.nextLine();
            LocalDate dataEntrada = LocalDate.parse(dataEntradaStr, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            
            Entrada novaEntrada = new Entrada(null, dataEntrada, usuario, produto, fornecedor);
            EntradaDaoJDBC entradaDao = (EntradaDaoJDBC) DaoFactory.createEntradaDao();
            entradaDao.insert(novaEntrada);
            
            System.out.println("Entrada registrada com sucesso!");
        } else if (opcao == 7) {
            System.out.print("Digite o ID do produto: ");
            int idProduto = sc.nextInt();

            ProdutoDaoJDBC produtoDao = (ProdutoDaoJDBC) DaoFactory.createProdutoDao();
            Produto produto = produtoDao.findById(idProduto);
            if (produto == null) {
                System.out.println("Produto não encontrado.");
                return;
            }

            System.out.print("Digite o ID do cliente: ");
            int idCliente = sc.nextInt();
            
            ClienteDaoJDBC clienteDao = (ClienteDaoJDBC) DaoFactory.createClienteDao();
            Cliente cliente = clienteDao.findById(idCliente);
            if (cliente == null) {
                System.out.println("Cliente não encontrado.");
                return;
            }

            System.out.print("Digite o ID de usuário responsável pela saída: ");
            int idUsuario = sc.nextInt();
            
            UsuarioDaoJDBC usuarioDao = (UsuarioDaoJDBC) DaoFactory.createUsuarioDao();
            Usuario usuario = usuarioDao.findById(idUsuario);
            if (usuario == null) {
                System.out.println("Usuário não encontrado.");
                return;
            }

            System.out.print("Digite o preço da saída: ");
            double precoSaida = sc.nextDouble();

            System.out.print("Digite a data de saída (dd/MM/yyyy): ");
            sc.nextLine(); 
            String dataSaidaStr = sc.nextLine();
            LocalDate dataSaida = LocalDate.parse(dataSaidaStr, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            
            Saida novaSaida = new Saida(null, dataSaida, precoSaida, usuario, produto, cliente);
            SaidaDaoJDBC saidaDao = (SaidaDaoJDBC) DaoFactory.createSaidaDao();
            saidaDao.insert(novaSaida);
            
            System.out.println("Saída registrada com sucesso!");
        } else {
            System.out.println("Opção inválida.");
        }

        sc.close();
    }
}
